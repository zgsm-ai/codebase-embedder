// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"log"
	"net/http"

	"github.com/zgsm-ai/codebase-indexer/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	log.Println("[DEBUG] 开始注册路由...")

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/search/semantic",
				Handler: semanticSearchHandler(serverCtx),
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: POST /codebase-embedder/api/v1/search/semantic")

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodDelete,
				Path:    "/api/v1/embeddings",
				Handler: deleteIndexHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/embeddings/summary",
				Handler: summaryHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/embeddings/vectors-summary",
				Handler: vectorsSummaryHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/files/token",
				Handler: TokenHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/files/upload",
				Handler: taskHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/files/status",
				Handler: StatusHandler(serverCtx),
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: DELETE /codebase-embedder/api/v1/embeddings")
	log.Println("[DEBUG] 已注册路由: GET /codebase-embedder/api/v1/embeddings/summary")
	log.Println("[DEBUG] 已注册路由: GET /codebase-embedder/api/v1/embeddings/vectors-summary")
	log.Println("[DEBUG] 已注册路由: POST /codebase-embedder/api/v1/files/token")
	log.Println("[DEBUG] 已注册路由: POST /codebase-embedder/api/v1/files/upload")
	log.Println("[DEBUG] 已注册路由: POST /codebase-embedder/api/v1/files/status")

	// 添加代码库查询接口路由
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/codebase/query",
				Handler: NewQueryCodebaseHandler(serverCtx).QueryCodebase,
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: POST /codebase-embedder/api/v1/codebase/query")

	// 添加代码库树结构接口路由
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/codebase/tree",
				Handler: NewCodebaseTreeHandler(serverCtx).TreeHandler,
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: POST /codebase-embedder/api/v1/codebase/tree")

	// 添加运行中任务查询接口路由
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tasks/running",
				Handler: RunningTasksHandler(serverCtx),
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: GET /codebase-embedder/api/v1/tasks/running")
	// 添加已完成任务查询接口路由
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tasks/completed",
				Handler: CompletedTasksHandler(serverCtx),
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: GET /codebase-embedder/api/v1/tasks/completed")
	// 添加失败任务查询接口路由
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tasks/failed",
				Handler: FailedTasksHandler(serverCtx),
			},
		},
		rest.WithPrefix("/codebase-embedder"),
	)
	log.Println("[DEBUG] 已注册路由: GET /codebase-embedder/api/v1/tasks/failed")
	log.Println("[DEBUG] 路由注册完成")
}
